openapi: 3.0.0
info:
  title: Voter Card Application API SQS Message Types for EROP Clients
  version: '1.5.1'
  description: |-
    Voter Card application API SQS Message Types for EROP Clients
    
    Messages defined in this spec are produced by EROP (VCA and other apps) and consumed by VCA
    
    Whilst this is an openAPI spec, it does not imply being used to define REST APIs, nor is it intended to.
    
    The `paths` elements are being used to document (at a high level) the SQS queues and the request bodies that are expected
    to be published to them. **There is no intent to generate or implement SQS queues or listener classes from this document.**
    
    The `paths` element is only being used in order to maintain the structure of the openApi spec, as `paths` are required 
    elements.
#
# --------------------------------------------------------------------------------
#

paths:
  #
  # --------------------------------------------------------------------------------
  # SQS Queues start here
  # --------------------------------------------------------------------------------
  #
  '/move-certificate-photo':
    post:
      tags:
        - SQS Queues
      requestBody:
        $ref: '#/components/requestBodies/S3EventNotificationMessage'
      responses:
        '204':
          description: No response content.
  '/move-erop-uploaded-application-photo':
    post:
      tags:
        - SQS Queues
      requestBody:
        $ref: '#/components/requestBodies/S3EventNotificationMessage'
      responses:
        '204':
          description: No response content.
  '/move-erop-uploaded-application-id-document':
    post:
      tags:
        - SQS Queues
      requestBody:
        $ref: '#/components/requestBodies/S3EventNotificationMessage'
      responses:
        '204':
          description: No response content.
  '/remove-voter-card-application-data':
    post:
      tags:
        - SQS Queues
      requestBody:
        $ref: '#/components/requestBodies/RemoveApplicationMessage'
      responses:
        '204':
          description: No response content.
  '/trigger-voter-card-statistics-update':
    post:
      tags:
        - SQS Queues
      requestBody:
        $ref: '#/components/requestBodies/UpdateStatisticsMessage'
      responses:
        '204':
          description: No response content.
components:
  #
  # Schema and Enum Definitions
  # --------------------------------------------------------------------------------
  schemas:

    S3EventNotificationMessage:
      title: S3EventNotificationMessage
      description: The SQS message that contains information about newly added resource in S3 bucket.
      type: object
      properties:
        Records:
          $ref: '#/components/schemas/S3EventNotifications'
      required:
        - Records
    # Following S3EventNotifications object and it's attributes have been constructed from
    # the sample AWS S3 notification payload and json structure defined on webpage https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-content-structure.html
    S3EventNotifications:
      title: S3EventNotifications
      description: Contains one or more S3 event notification message(s) that Amazon S3 sends to publish s3 related event(s)
      type: array
      items:
        $ref: '#/components/schemas/S3EventNotificationRecord'
    S3EventNotificationRecord:
      title: S3EventNotificationRecord
      description: Notification event message Amazon S3 sends to publish a s3 related event.
        Structure is defined on webpage [https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-content-structure.html]
      type: object
      properties:
        eventVersion:
          type: string
          description: Amazon S3 event version
          example: 2.1
        eventSource:
          type: string
          description: Amazon S3 event source
          example: aws:s3
        awsRegion:
          type: string
          description: Amazon S3 aws region
          example: us-west-2
        eventTime:
          type: string
          description: The time in `ISO-8601` format for example [1980-01-01T00:00:00.000Z] when Amazon S3 finished processing the request
          example: 1980-01-01T00:00:00.000Z
        eventName:
          $ref: '#/components/schemas/S3EventType'
        userIdentity:
          $ref: '#/components/schemas/UserIdentity'
        requestParameters:
          $ref: '#/components/schemas/RequestParameters'
        responseElements:
          $ref: '#/components/schemas/ResponseElements'
        s3:
          $ref: '#/components/schemas/S3Detail'
        glacierEventData:
          $ref: '#/components/schemas/GlacierEventData'
      required:
        - eventVersion
        - awsRegion
        - eventTime
        - eventName
        - s3
    S3EventType:
      title: S3EventType
      description: An enumeration of events sent by S3
      type: string
      enum:
        - ObjectCreated:Put
    UserIdentity:
      title: UserIdentity
      type: object
      properties:
        principalId:
          type: string
          description: Amazon customerID of the user who caused the event
          example: AIDAJDPLRKLG7UEXAMPLE
    RequestParameters:
      title: RequestParameters
      type: object
      properties:
        sourceIPAddress:
          type: string
          example: 127.0.0.1
    ResponseElements:
      title: ResponseElements
      description: The responseElements key value is useful if you want to trace a request by following up with AWS Support. Both x-amz-request-id and x-amz-id-2 help Amazon S3 trace an individual request
      type: object
      properties:
        x-amz-request-id:
          type: string
          description: Amazon S3 generated request ID
          example: C3D13FE58DE4C810
        x-amz-id-2:
          type: string
          description: Amazon S3 host that processed the request
          example: FMyUVURIY8/IgAtTv8xRjskZQpcIZ9KG4V5Wp6S7S/JRWeUWerMUE5JgHvANOjpD
    S3Detail:
      title: S3Detail
      type: object
      properties:
        s3SchemaVersion:
          type: string
          description: S3 schema version
          example: "1.0"
        configurationId:
          type: string
          description: ID found in the bucket notification configuration
          example: triggerS3Event-on-photo-upload-config
        bucket:
          $ref: '#/components/schemas/S3DetailBucket'
        object:
          $ref: '#/components/schemas/S3DetailObject'
      required:
        - bucket
        - object
    S3DetailBucket:
      title: S3DetailBucket
      description: S3 bucket details
      type: object
      properties:
        name:
          type: string
          description: Bucket name from where this event came from
          example: vca-example-source-bucket
        ownerIdentity:
          $ref: '#/components/schemas/UserIdentity'
        arn:
          type: string
          description: S3Arn of the resource
          example: arn:aws:s3:::vca-example-source-bucket
      required:
        - name
    S3DetailObject:
      title: S3DetailObject
      description: Object containing details of the resources on S3 bucket
      type: object
      properties:
        key:
          type: string
          description: The s3 key provides information about the bucket and object involved in the event. The object key name value is URL encoded. For example, "red flower.jpg" becomes "red+flower.jpg"
          example: HappyFace.png
        size:
          type: integer
          description: object-size in bytes
          example: 1024
        eTag:
          type: string
          description: object/resource eTag
          example: eTag-d41d8cd98f00b204e9800998ecf8427e
        versionId:
          type: string
          description: object version if bucket is versioning-enabled otherwise null
          example: 096fKKXTRTtl3on89fVO.nfljtsv6qko
        sequencer:
          type: string
          description: A string representation of a hexadecimal value used to determine event sequence only used with PUTs and DELETEs. The sequencer key provides a way to determine the sequence of events. Event notifications aren't guaranteed to arrive in the same order that the events occurred. However, notifications from events that create objects (PUTs) and delete objects contain a sequencer. It can be used to determine the order of events for a given object key
          example: 0055AED6DCD90281E5
      required:
        - key
    GlacierEventData:
      title: GlacierEventData
      description: The glacierEventData key is `only` visible for `[s3:ObjectRestore:Completed]` events.
      type: object
      properties:
        restoreEventData:
          description: The restoreEventData key contains attributes that are related to your restore request.
          type: object
          properties:
            lifecycleRestorationExpiryTime:
              type: string
              description: The lifecycleEventData key is `only` visible for S3 Lifecycle transition events. The time in ISO-8601 format for example 1970-01-01T00:00:00.000Z of Restore Expiry
              example: 1970-01-01T00:00:00.000Z
            lifecycleRestoreStorageClass:
              type: string
              description: Source storage class for restore
    RemoveApplicationMessage:
      title: RemoveApplicationMessage
      type: object
      description: SQS Message for initiating the removal of voter card application data within VCA.
      properties:
        voterCardApplicationId:
          type: string
          description: The identifier of the Voter Card Application
          example: 1f0f76a9a66f438b9bb33070
      required:
        - voterCardApplicationId
    UpdateStatisticsMessage:
      title: UpdateStatisticsMessage
      type: object
      description: SQS Message for initiating a statistics update for a voter card application.
      properties:
        voterCardApplicationId:
          type: string
          description: The identifier of the Voter Card Application
          example: 1f0f76a9a66f438b9bb33070
      required:
        - voterCardApplicationId

  #
  # Response Body Definitions
  # --------------------------------------------------------------------------------
  responses: { }

  #
  # Request Body Definitions
  # --------------------------------------------------------------------------------
  requestBodies:
    S3EventNotificationMessage:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/S3EventNotificationMessage'
    RemoveApplicationMessage:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RemoveApplicationMessage'
    UpdateStatisticsMessage:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateStatisticsMessage'
