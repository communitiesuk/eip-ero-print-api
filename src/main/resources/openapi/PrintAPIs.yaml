openapi: 3.0.0
info:
  title: Print APIs
  version: '1.11.0'
  description: Print APIs
  contact:
    name: Krister Bone
    email: krister.bone@valtech.com
#
# --------------------------------------------------------------------------------
#
paths:
  #
  # --------------------------------------------------------------------------------
  # RESTful style endpoints start here
  # --------------------------------------------------------------------------------
  #

  #
  # Voter Authority Certificate (VAC)
  # --------------------------------------------------------------------------------
  '/eros/{eroId}/certificates':
    parameters:
      - name: eroId
        description: The ID of the Electoral Registration Office responsible for the application.
        schema:
          type: string
        in: path
        required: true
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - Voter Authority Certificates (VAC)
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: { }
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
    get:
      summary: Returns a single certificate summary for a Voter Card Application
      description: Returns a single certificate summary for a Voter Card Application
      parameters:
        - name: applicationId
          description: The identifier of the Voter Card Application.
          schema:
            type: string
          in: query
          required: true
      tags:
        - Voter Authority Certificates (VAC)
      responses:
        '200':
          $ref: '#/components/responses/CertificateSummary'
        '404':
          description: Not Found
      operationId: get-certificate-summary-by-application-id
      security:
        - eroUserCognitoUserPoolAuthorizer: [ ]
      x-amazon-apigateway-integration:
        type: HTTP_PROXY
        uri: '${base_uri}/eros/{eroId}/certificates'
        requestParameters:
          integration.request.path.eroId: method.request.path.eroId
        responseParameters:
          method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
          method.response.header.Access-Control-Allow-Methods: '''*'''
          method.response.header.Access-Control-Allow-Origin: '''*'''
        connectionType: VPC_LINK
        connectionId: '${vpc_connection_id}'
        httpMethod: GET

  '/eros/{eroId}/certificates/applications/{applicationId}':
    parameters:
      - name: eroId
        description: The ID of the Electoral Registration Office responsible for the application.
        schema:
          type: string
        in: path
        required: true
      - name: applicationId
        description: The identifier of the Voter Card Application to retrieve.
        schema:
          type: string
        in: path
        required: true
    options:
      deprecated: true
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - Voter Authority Certificates (VAC)
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: { }
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
    get:
      deprecated: true
      summary: Returns a single certificate summary. Deprecated. Use /eros/{eroId}/certificates?applicationId={applicationId} instead
      description: Returns a single certificate summary. Deprecated. Use /eros/{eroId}/certificates?applicationId={applicationId} instead
      tags:
        - Voter Authority Certificates (VAC)
      responses:
        '200':
          $ref: '#/components/responses/CertificateSummary'
        '404':
          description: Not Found
      operationId: deprecated-get-certificate-summary-by-application-id
      security:
        - eroUserCognitoUserPoolAuthorizer: [ ]
      x-amazon-apigateway-integration:
        type: HTTP_PROXY
        uri: '${base_uri}/eros/{eroId}/certificates/applications/{applicationId}'
        requestParameters:
          integration.request.path.eroId: method.request.path.eroId
          integration.request.path.applicationId: method.request.path.applicationId
        responseParameters:
          method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
          method.response.header.Access-Control-Allow-Methods: '''*'''
          method.response.header.Access-Control-Allow-Origin: '''*'''
        connectionType: VPC_LINK
        connectionId: '${vpc_connection_id}'
        httpMethod: GET


  #
  # Temporary Certificates for a Voter Card Application
  # --------------------------------------------------------------------------------
  '/eros/{eroId}/temporary-certificates/applications/{applicationId}':
    parameters:
      - name: eroId
        description: The ID of the Electoral Registration Office responsible for the application.
        schema:
          type: string
        in: path
        required: true
      - name: applicationId
        description: The identifier of the Voter Card Application.
        schema:
          type: string
        in: path
        required: true
    options:
      deprecated: true
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - VAC Temporary Certificates
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: { }
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
    get:
      deprecated: true
      summary: Returns the Temporary Certificate summaries for an application. Deprecated. Use /eros/{eroId}/temporary-certificates?applicationId={applicationId} instead
      description: Returns the Temporary Certificate summaries for an application. Deprecated. Use /eros/{eroId}/temporary-certificates?applicationId={applicationId} instead
      tags:
        - VAC Temporary Certificates
      responses:
        200:
          $ref: '#/components/responses/TemporaryCertificateSummaries'
      operationId: deprecated-get-temporary-certificate-summaries-by-application-id
      security:
        - eroUserCognitoUserPoolAuthorizer: [ ]
      x-amazon-apigateway-integration:
        type: HTTP_PROXY
        uri: '${base_uri}/eros/{eroId}/temporary-certificates/applications/{applicationId}'
        requestParameters:
          integration.request.path.eroId: method.request.path.eroId
          integration.request.path.applicationId: method.request.path.applicationId
        responseParameters:
          method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
          method.response.header.Access-Control-Allow-Methods: '''*'''
          method.response.header.Access-Control-Allow-Origin: '''*'''
        connectionType: VPC_LINK
        connectionId: '${vpc_connection_id}'
        httpMethod: GET

  #
  # Temporary Certificates
  # --------------------------------------------------------------------------------
  '/eros/{eroId}/temporary-certificates':
    parameters:
      - name: eroId
        description: The ID of the Electoral Registration Office responsible for the application.
        schema:
          type: string
        in: path
        required: true
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - VAC Temporary Certificates
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: { }
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
    post:
      summary: Generates and returns a temporary certificate
      description: Generates and returns a temporary certificate
      tags:
        - VAC Temporary Certificates
      requestBody:
        $ref: '#/components/requestBodies/GenerateTemporaryCertificate'
      responses:
        '201':
          description: created
          headers:
            Content-Disposition:
              description: Content-Disposition header
              schema:
                type: string
                example: attachment; filename="temporary-certificate-DGFF4E6420YHWPJYX560.pdf"
        '400':
          description: Error response describing fields in the request payload that are in error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
      operationId: generate-temporary-certificate
      security:
        - eroUserCognitoUserPoolAuthorizer: [ ]
      x-amazon-apigateway-integration:
        type: HTTP_PROXY
        uri: '${base_uri}/eros/{eroId}/temporary-certificates'
        requestParameters:
          integration.request.path.eroId: method.request.path.eroId
        responseParameters:
          method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
          method.response.header.Access-Control-Allow-Methods: '''*'''
          method.response.header.Access-Control-Allow-Origin: '''*'''
        connectionType: VPC_LINK
        connectionId: '${vpc_connection_id}'
        httpMethod: POST

    get:
      summary: Returns the Temporary Certificate summaries for a Voter Card Application
      description: Returns the Temporary Certificate summaries for a Voter Card Application
      parameters:
        - name: applicationId
          description: The identifier of the Voter Card Application.
          schema:
            type: string
          in: query
          required: true
      tags:
        - VAC Temporary Certificates
      responses:
        200:
          $ref: '#/components/responses/TemporaryCertificateSummaries'
      operationId: get-temporary-certificate-summaries-by-application-id
      security:
        - eroUserCognitoUserPoolAuthorizer: [ ]
      x-amazon-apigateway-integration:
        type: HTTP_PROXY
        uri: '${base_uri}/eros/{eroId}/temporary-certificates'
        requestParameters:
          integration.request.path.eroId: method.request.path.eroId
        responseParameters:
          method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
          method.response.header.Access-Control-Allow-Methods: '''*'''
          method.response.header.Access-Control-Allow-Origin: '''*'''
        connectionType: VPC_LINK
        connectionId: '${vpc_connection_id}'
        httpMethod: GET

  #
  # Temporary Certificates Explainer Document
  # --------------------------------------------------------------------------------
  '/eros/{eroId}/temporary-certificates/{gssCode}/explainer-document':
    parameters:
      - name: eroId
        description: The ID of the Electoral Registration Office responsible for the application.
        schema:
          type: string
        in: path
        required: true
      - name: gssCode
        description: The relevant GSS code for the local authority.
        schema:
          type: string
          example: 'E09000007'
        in: path
        required: true
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - VAC Temporary Certificates
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: { }
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
    post:
      summary: Returns the Local Authority's Explainer Document for a temporary certificate
      description: |
        Returns the Local Authority's Explainer Document for a temporary certificate  
        The Explainer Document is a separately generated and printed document that accompanies the Temporary Certificate
        and is used to explain to the Elector how to use their Temporary Certificate.
      tags:
        - VAC Temporary Certificates
      responses:
        '201':
          description: created
          headers:
            Content-Disposition:
              description: Content-Disposition header
              schema:
                type: string
                example: attachment; filename="temporary-certificate-explainer-document-E09000007.pdf"
        '404':
          description: Not Found
      operationId: generate-temporary-certificate-explainer-document
      security:
        - eroUserCognitoUserPoolAuthorizer: [ ]
      x-amazon-apigateway-integration:
        type: HTTP_PROXY
        uri: '${base_uri}/eros/{eroId}/temporary-certificates/{gssCode}/explainer-document'
        requestParameters:
          integration.request.path.eroId: method.request.path.eroId
          integration.request.path.gssCode: method.request.path.gssCode
        responseParameters:
          method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
          method.response.header.Access-Control-Allow-Methods: '''*'''
          method.response.header.Access-Control-Allow-Origin: '''*'''
        connectionType: VPC_LINK
        connectionId: '${vpc_connection_id}'
        httpMethod: POST

  #
  # Anonymous Elector Documents (AEDs)
  # --------------------------------------------------------------------------------
  '/eros/{eroId}/anonymous-elector-documents':
    parameters:
      - name: eroId
        description: The ID of the Electoral Registration Office responsible for the application.
        schema:
          type: string
        in: path
        required: true
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - Anonymous Elector Documents (AED)
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: { }
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
    post:
      summary: Generates and returns an Anonymous Elector Document (AED). The document status is marked as `PRINTED` upon successful generation of AED document.
      description: Generates and returns an Anonymous Elector Document (AED). The document status is marked as `PRINTED` upon successful generation of AED document.
      tags:
        - Anonymous Elector Documents (AED)
      requestBody:
        $ref: '#/components/requestBodies/GenerateAnonymousElectorDocument'
      responses:
        '201':
          description: created
          headers:
            Content-Disposition:
              description: Content-Disposition header
              schema:
                type: string
                example: attachment; filename="anonymous-elector-document-DGFF4E6420YHWPJYX560.pdf"
        '400':
          description: Error response describing fields in the request payload that are in error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
      operationId: generate-anonymous-elector-document
      security:
        - eroUserCognitoUserPoolAuthorizer: [ ]
      x-amazon-apigateway-integration:
        type: HTTP_PROXY
        uri: '${base_uri}/eros/{eroId}/anonymous-elector-documents'
        requestParameters:
          integration.request.path.eroId: method.request.path.eroId
        responseParameters:
          method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
          method.response.header.Access-Control-Allow-Methods: '''*'''
          method.response.header.Access-Control-Allow-Origin: '''*'''
        connectionType: VPC_LINK
        connectionId: '${vpc_connection_id}'
        httpMethod: POST

    get:
      summary: Returns the Anonymous Elector Document summaries for an Anonymous application
      description: Returns the Anonymous Elector Document summaries for an Anonymous application
      tags:
        - Anonymous Elector Documents (AED)
      parameters:
        - name: applicationId
          description: An identifier of an Anonymous Elector Document application
          schema:
            type: string
          in: query
          required: true
      responses:
        '200':
          $ref: '#/components/responses/AnonymousElectorDocumentSummaries'
        '404':
          description: Not Found
      operationId: get-anonymous-elector-document-summaries-by-application-id
      security:
        - eroUserCognitoUserPoolAuthorizer: [ ]
      x-amazon-apigateway-integration:
        type: HTTP_PROXY
        uri: '${base_uri}/eros/{eroId}/anonymous-elector-documents'
        requestParameters:
          integration.request.path.eroId: method.request.path.eroId
        responseParameters:
          method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
          method.response.header.Access-Control-Allow-Methods: '''*'''
          method.response.header.Access-Control-Allow-Origin: '''*'''
        connectionType: VPC_LINK
        connectionId: '${vpc_connection_id}'
        httpMethod: GET

  #
  # Anonymous Elector Document (AED) Explainer Document
  # --------------------------------------------------------------------------------
  '/eros/{eroId}/anonymous-elector-documents/{gssCode}/explainer-document':
    parameters:
      - name: eroId
        description: The ID of the Electoral Registration Office responsible for the AED application.
        schema:
          type: string
        in: path
        required: true
      - name: gssCode
        description: The relevant GSS code for the local authority.
        schema:
          type: string
          example: 'E09000007'
        in: path
        required: true
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - Anonymous Elector Documents (AED) Explainer Document
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: { }
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
    post:
      summary: Returns the Local Authority's Explainer Document for an AED
      description: |
        Returns the Local Authority's Explainer Document for an Anonymous Elector Document  
        The Explainer Document is a separately generated and printed document that accompanies the AED
        and is used to explain to the Elector how to use their AED.
      operationId: generate-aed-explainer-document
      tags:
        - Anonymous Elector Documents (AED) Explainer Document
      responses:
        '201':
          description: created
          headers:
            Content-Disposition:
              description: Content-Disposition header
              schema:
                type: string
                example: attachment; filename="aed-explainer-document-E09000007.pdf"
        '404':
          description: Not Found
      security:
        - eroUserCognitoUserPoolAuthorizer: [ ]
      x-amazon-apigateway-integration:
        type: HTTP_PROXY
        uri: '${base_uri}/eros/{eroId}/anonymous-elector-documents/{gssCode}/explainer-document'
        requestParameters:
          integration.request.path.eroId: method.request.path.eroId
          integration.request.path.gssCode: method.request.path.gssCode
        responseParameters:
          method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
          method.response.header.Access-Control-Allow-Methods: '''*'''
          method.response.header.Access-Control-Allow-Origin: '''*'''
        connectionType: VPC_LINK
        connectionId: '${vpc_connection_id}'
        httpMethod: POST

components:
  #
  # Schema and Enum Definitions
  # --------------------------------------------------------------------------------
  schemas:
    ConflictErrorResponse:
      title: ConflictErrorResponse
      description: Response describing errors in a web request for conflicts.
      properties:
        timestamp:
          type: string
          format: date-time
          example: '2022-09-28T18:01:42.105Z'
        status:
          type: integer
          example: 409
        error:
          type: string
          example: 'Conflict'
        message:
          type: string
          example: 'An application with applicationId = 34ed0c0bc47d8d741539ccac has an unexpected status RECEIVED'
      required:
        - timestamp
        - status
        - error
        - message
    ErrorResponse:
      title: ErrorResponse
      description: Response describing errors in a web request
      properties:
        timestamp:
          type: string
          format: date-time
          example: '2022-09-28T18:01:42.105Z'
        status:
          type: integer
          example: 400
        error:
          type: string
          example: 'Bad Request'
        message:
          type: string
          example: 'Validation failed for object=paperVoterCardApplicationRequest. Error count: 14'
        validationErrors:
          type: array
          items:
            type: string
          example: 'Error on field applicant.nino: rejected value [aaaaaaaaaaa], must match ^.{1,10}$'
      required:
        - timestamp
        - status
        - error
        - message
    CertificateSummaryResponse:
      title: CertificateSummaryResponse
      type: object
      description: A response containing a single Certificate summary
      properties:
        vacNumber:
          type: string
          pattern: '^[0-9AC-HJ-NP-RT-Z]{20}$'
          description: The unique identifier of the Certificate. A 20 character alphanumeric string.
          example: DEV1W0XDH1368LWE1J40
        printRequestSummaries:
          type: array
          description: List of print request summaries for the certificate.
          items:
            $ref: '#/components/schemas/PrintRequestSummary'
      required:
        - vacNumber
        - printRequestSummaries
    PrintRequestSummary:
      title: PrintRequestSummary
      description: An object containing print request summary
      type: object
      allOf:
        - $ref: '#/components/schemas/UpdatedBy'
      properties:
        status:
          $ref: '#/components/schemas/PrintRequestStatus'
        message:
          type: string
          description: Message received for the print request status update
      required:
        - status
    PrintRequestStatus:
      title: PrintRequestStatus
      type: string
      enum:
        - print-processing
        - print-failed
        - dispatched
        - not-delivered

    SourceType:
      title: SourceType
      description: An enumeration of sources
      type: string
      enum:
        - voter-card
        - anonymous-elector-document

    CertificateLanguage:
      title: CertificateLanguage
      description: An enumeration of Certificate languages
      type: string
      enum:
        - cy
        - en
      default: en

    UpdatedBy:
      title: UpdatedBy
      description: Object containing the updated by details of a resource.
      type: object
      properties:
        userId:
          description: "UserId (email address) of who last updated the resource."
          format: email
          type: string
          example: fred@some-ero.gov.uk
        dateTime:
          description: "The timestamp in ISO-8601 UTC when an update on the resource occurred."
          type: string
          format: date-time
          example: '2022-08-17T16:38:06Z'
      required:
        - userId
        - dateTime

    SupportingInformationFormat:
      type: string
      description: The format of the supporting information sent with the document.
      enum:
        - standard
    CertificateDelivery:
      title: CertificateDelivery
      description: Object describing how and where the Anonymous Elector Document should be delivered
      type: object
      properties:
        deliveryClass:
          $ref: '#/components/schemas/DeliveryClass'
        deliveryAddressType:
          $ref: '#/components/schemas/DeliveryAddressType'
        addressee:
          type: string
          maxLength: 255
          description: The addressee to be printed in addition to the delivery address
        address:
          $ref: '#/components/schemas/Address'
        addressFormat:
          $ref: '#/components/schemas/AddressFormat'
      required:
        - deliveryClass
        - deliveryAddressType
        - addressee
        - address
        - addressFormat

    DeliveryClass:
      title: DeliveryClass
      description: The delivery class for the Anonymous Elector Document
      type: string
      enum:
        - standard

    DeliveryAddressType:
      title: DeliveryAddressType
      description: The delivery address type for the Anonymous Elector Document
      type: string
      enum:
        - registered
        - ero-collection
        - alternative

    AddressFormat:
      title: AddressFormat
      description: Enumeration of address formats
      type: string
      enum:
        - uk
        - overseas
        - bfpo

    Address:
      title: Address
      description: Address format used throughout gov.uk voter services.
      type: object
      x-examples:
        Minimum data:
          street: Street 1
          postcode: PC1 2FB
        Normal Address:
          street: East Lodge
          property: Balruddery
          locality: Invergowrie
          town: Dundee
          area: Angus
          postcode: DD25LF
          uprn: '117095813'
      properties:
        street:
          type: string
          maxLength: 255
        property:
          type: string
          maxLength: 255
        locality:
          type: string
          maxLength: 255
        town:
          type: string
          maxLength: 255
        area:
          type: string
          maxLength: 255
        postcode:
          type: string
          maxLength: 10
        uprn:
          type: string
          description: Unique Property Reference Number consisting of up to 12 digits in length
          pattern: '^\d{1,12}$'
      required:
        - street
        - postcode

    TemporaryCertificateSummariesResponse:
      title: TemporaryCertificateSummariesResponse
      type: object
      description: A response containing a collection of Temporary Certificate summaries
      properties:
        temporaryCertificates:
          type: array
          description: List of Temporary Certificate summaries for the application.
          items:
            $ref: '#/components/schemas/TemporaryCertificateSummary'
      required:
        - temporaryCertificates
    TemporaryCertificateSummary:
      title: TemporaryCertificateSummary
      type: object
      description: An object containing Temporary Certificate summary
      properties:
        certificateNumber:
          type: string
          pattern: '^[0-9AC-HJ-NP-RT-Z]{20}$'
          description: The unique identifier of the Certificate. A 20 character alphanumeric string.
          example: DEV1W0XDH1368LWE1J40
        status:
          $ref: '#/components/schemas/TemporaryCertificateStatus'
        userId:
          type: string
          format: email
          example: fred.blogs@some-domain.co.uk
          description: UserId of the user who generated the Temporary Certificate
        dateTimeGenerated:
          type: string
          format: date-time
          description: The timestamp in ISO-8601 UTC that the Temporary Certificate was generated
          example: '2022-11-17T10:53:25Z'
        issueDate:
          type: string
          format: date
          description: The date that the Temporary Certificate was issued
          example: '2022-11-17'
        validOnDate:
          type: string
          format: date
          description: The date on which the Temporary Certificate is/was valid
          example: '2022-11-19'
      required:
        - certificateNumber
        - status
        - userId
        - dateTimeGenerated
        - issueDate
        - validOnDate
    TemporaryCertificateStatus:
      title: TemporaryCertificateStatus
      type: string
      enum:
        - generated

    GenerateTemporaryCertificateRequest:
      title: GenerateTemporaryCertificateRequest
      description: Request body to generate a Temporary Certificate
      type: object
      properties:
        gssCode:
          type: string
          example: E12345678
          minLength: 9
          maxLength: 9
          description: GSS code of the ERO responsible for the application
        sourceType:
          $ref: '#/components/schemas/SourceType'
        sourceReference:
          type: string
          example: 1f0f76a9a66f438b9bb33070
          description: Reference in the source application that this Temporary Certificate is for.
        applicationReference:
          type: string
          example: V3JSZC4CRH
          description: The application reference as known by the citizen. Not guaranteed to be unique.
        firstName:
          type: string
          maxLength: 255
          description: First name of the Elector
          example: John
        middleNames:
          type: string
          maxLength: 255
          description: Middle names of the Elector
          example: Malcolm
        surname:
          type: string
          maxLength: 255
          description: Surname of the Elector
          example: Smith
        certificateLanguage:
          $ref: '#/components/schemas/CertificateLanguage'
        photoLocation:
          type: string
          description: |
            The location of the Elector's Certificate photo. 
            This is the photo that has been prepared and approved for the Certificate by the vc-admin, rather than the photo that the applicant uploaded as part of their original application. 
            Typically an S3 ARN
          maxLength: 1024
        validOnDate:
          type: string
          format: date
          description: The date that the Temporary Certificate is valid for.
          example: '2023-07-27'
      required:
        - gssCode
        - sourceType
        - sourceReference
        - applicationReference
        - firstName
        - surname
        - certificateLanguage
        - photoLocation
        - validOnDate

    AnonymousElectorDocumentSummariesResponse:
      title: AnonymousElectorDocumentSummariesResponse
      description: A response containing a collection of Anonymous Elector Document summaries sorted with latest changes ordered first.
      type: object
      properties:
        anonymousElectorDocuments:
          title: AnonymousElectorDocuments
          type: array
          description: List of Anonymous Elector Document summaries for the application.
          items:
            $ref: '#/components/schemas/AnonymousElectorDocumentSummary'
      required:
        - anonymousElectorDocuments
    AnonymousElectorDocumentSummary:
      title: AnonymousElectorDocumentSummary
      description: An object summarising the current state of an Anonymous Elector Document (AED)
      type: object
      allOf:
        - $ref: '#/components/schemas/UpdatedBy'
      properties:
        certificateNumber:
          type: string
          pattern: '^[0-9AC-HJ-NP-RT-Z]{20}$'
          description: The unique identifier of the Anonymous Electoral Document. A 20 character alphanumeric string.
          example: DEV1W0XDH1368LWE1J40
        status:
          $ref: '#/components/schemas/AnonymousElectorDocumentStatus'
        electoralRollNumber:
          type: string
          description: Electoral roll number printed on the AED
          example: GN3233
        issueDate:
          type: string
          format: date
          description: The date on which the AED was issued
          example: '2022-11-17'
      required:
        - certificateNumber
        - status
        - electoralRollNumber
        - issueDate

    AnonymousElectorDocumentStatus:
      title: AnonymousElectorDocumentStatus
      description: Status of an Anonymous Elector document
      type: string
      enum:
        - generated
        - printed

    GenerateAnonymousElectorDocumentRequest:
      title: GenerateAnonymousElectorDocumentRequest
      description: Request body to generate an Anonymous Elector Document (AED)
      type: object
      properties:
        gssCode:
          type: string
          example: E12345678
          minLength: 9
          maxLength: 9
          description: GSS code of the ERO responsible for the application
        sourceType:
          $ref: '#/components/schemas/SourceType'
        sourceReference:
          type: string
          example: 1f0f76a9a66f438b9bb33070
          description: Reference in the source application that this Anonymous Elector Document is for.
        applicationReference:
          type: string
          example: V3JSZC4CRH
          description: The application reference as known by the citizen. Not guaranteed to be unique.
        electoralRollNumber:
          type: string
          pattern: '^[a-zA-Z]{2,3}\d{1,4}$'
          example: gf5154
          description: The electoral roll number allocated by the Local Authority to the elector.
        certificateLanguage:
          $ref: '#/components/schemas/CertificateLanguage'
        supportingInformationFormat:
          $ref: '#/components/schemas/SupportingInformationFormat'
        photoLocation:
          type: string
          description: |
            The location of the Elector's Certificate photo. 
            This is the photo that has been prepared and approved for the AED by the vc-anonymous-admin, rather than the photo that the applicant uploaded as part of their original application. 
            Typically an S3 ARN
          maxLength: 1024
        firstName:
          type: string
          maxLength: 255
          description: First name of the Elector
          example: John
        middleNames:
          type: string
          maxLength: 255
          description: Middle names of the Elector
          example: Malcolm
        surname:
          type: string
          maxLength: 255
          description: Surname of the Elector
          example: Smith
        email:
          type: string
          maxLength: 1024
          format: email
          description: The applicant's email address. Null if not known
          example: fred.blogs@some-domain.co.uk
        phoneNumber:
          type: string
          maxLength: 50
          description: The applicant's phone number. Null if not known
          example: 01234 567890
        registeredAddress:
          $ref: '#/components/schemas/Address'
        delivery:
          # TODO make delivery as mandatory (EIP1-4668) once changes in VCA (EIP1-4665) are completed. TODO
          $ref: '#/components/schemas/CertificateDelivery'
      required:
        - gssCode
        - sourceType
        - sourceReference
        - applicationReference
        - electoralRollNumber
        - certificateLanguage
        - supportingInformationFormat
        - photoLocation
        - firstName
        - surname
        - registeredAddress

  #
  # Response Body Definitions
  # --------------------------------------------------------------------------------
  responses:
    CertificateSummary:
      description: Response containing a single Certificate summary
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
        Access-Control-Allow-Methods:
          schema:
            type: string
        Access-Control-Allow-Headers:
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CertificateSummaryResponse'
    TemporaryCertificateSummaries:
      description: Response containing a collection of Temporary Certificate summaries
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
        Access-Control-Allow-Methods:
          schema:
            type: string
        Access-Control-Allow-Headers:
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TemporaryCertificateSummariesResponse'
    AnonymousElectorDocumentSummaries:
      description: Response containing a collection of Anonymous Elector Document summaries
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
        Access-Control-Allow-Methods:
          schema:
            type: string
        Access-Control-Allow-Headers:
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AnonymousElectorDocumentSummariesResponse'
  #
  # Request Body Definitions
  # --------------------------------------------------------------------------------
  requestBodies:
    GenerateTemporaryCertificate:
      description: Request body to generate a Temporary Certificate
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenerateTemporaryCertificateRequest'
    GenerateAnonymousElectorDocument:
      description: Request body to generate an Anonymous Elector Document (AED)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenerateAnonymousElectorDocumentRequest'

  securitySchemes:
    eroUserCognitoUserPoolAuthorizer:
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: cognito_user_pools
      x-amazon-apigateway-authorizer:
        providerARNs:
          - '${cognito_ero_user_pool_arn}'
        type: cognito_user_pools