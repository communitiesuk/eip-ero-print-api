openapi: 3.0.0
info:
  title: Print APIs
  version: '1.1.1'
  description: Print APIs
  contact:
    name: Krister Bone
    email: krister.bone@valtech.com
#
# --------------------------------------------------------------------------------
#
paths:
  #
  # --------------------------------------------------------------------------------
  # RESTful style endpoints start here
  # --------------------------------------------------------------------------------
  #

  #
  # Single Certificate Summary
  # --------------------------------------------------------------------------------
  '/eros/{eroId}/certificates/applications/{applicationId}':
    parameters:
      - name: eroId
        description: The ID of the Electoral Registration Office responsible for the application.
        schema:
          type: string
        in: path
        required: true
      - name: applicationId
        description: The identifier of the Voter Card Application to retrieve.
        schema:
          type: string
        in: path
        required: true
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - Single Certificate Summary
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: { }
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
    get:
      summary: Returns a single certificate summary
      description: Returns a single certificate summary
      tags:
        - Single Certificate Summary
      responses:
        '200':
          $ref: '#/components/responses/CertificateSummary'
        '404':
          description: Not Found
      operationId: get-certificate-summary-by-application-id
      security:
        - eroUserCognitoUserPoolAuthorizer: [ ]
      x-amazon-apigateway-integration:
        type: HTTP_PROXY
        uri: '${base_uri}/eros/{eroId}/certificates/applications/{applicationId}'
        requestParameters:
          integration.request.path.eroId: method.request.path.eroId
          integration.request.path.applicationId: method.request.path.applicationId
        responseParameters:
          method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
          method.response.header.Access-Control-Allow-Methods: '''*'''
          method.response.header.Access-Control-Allow-Origin: '''*'''
        connectionType: VPC_LINK
        connectionId: '${vpc_connection_id}'
        httpMethod: GET


  #
  # Temporary Certificate Explainer Document
  # --------------------------------------------------------------------------------
  '/eros/{eroId}/temporary-certificate/{gssCode}/explainer-document':
    parameters:
      - name: eroId
        description: The ID of the Electoral Registration Office responsible for the application.
        schema:
          type: string
        in: path
        required: true
      - name: gssCode
        description: The relevant GSS code for the local authority.
        schema:
          type: string
          example: 'E09000007'
        in: path
        required: true
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - Temporary Card
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: { }
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
    post:
      summary: Returns the Local Authority's explainer document for a temporary certificate
      description: Returns the Local Authority's explainer document for a temporary certificate
      tags:
        - Temporary Card
      responses:
        '201':
          description: created
          headers:
            Content-Disposition:
              description: Content-Disposition header
              schema:
                type: string
                example: attachment; filename="explainer-document-E09000007.pdf"
        '404':
          description: Not Found
      operationId: generate-temporary-certificate-explainer-document
      security:
        - eroUserCognitoUserPoolAuthorizer: [ ]
      x-amazon-apigateway-integration:
        type: HTTP_PROXY
        uri: '${base_uri}/eros/{eroId}/temporary-certificate/{gssCode}/explainer-document'
        requestParameters:
          integration.request.path.eroId: method.request.path.eroId
          integration.request.path.applicationId: method.request.path.applicationId
        responseParameters:
          method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
          method.response.header.Access-Control-Allow-Methods: '''*'''
          method.response.header.Access-Control-Allow-Origin: '''*'''
        connectionType: VPC_LINK
        connectionId: '${vpc_connection_id}'
        httpMethod: POST

components:
  #
  # Schema and Enum Definitions
  # --------------------------------------------------------------------------------
  schemas:
    ErrorResponse:
      title: ErrorResponse
      description: Response describing errors in a web request
      properties:
        timestamp:
          type: string
          format: date-time
          example: '2022-09-28T18:01:42.105Z'
        status:
          type: integer
          example: 400
        error:
          type: string
          example: 'Bad Request'
        message:
          type: string
          example: 'Validation failed for object=paperVoterCardApplicationRequest. Error count: 14'
        validationErrors:
          type: array
          items:
            type: string
          example: 'Error on field applicant.nino: rejected value [aaaaaaaaaaa], must match ^.{1,10}$'
      required:
        - timestamp
        - status
        - error
        - message
    CertificateSummaryResponse:
      title: CertificateSummaryResponse
      type: object
      description: A response containing a single Certificate summary
      properties:
        vacNumber:
          type: string
          pattern: '^[0-9AC-HJ-NP-RT-Z]{20}$'
          description: The unique identifier of the Certificate. A 20 character alphanumeric string.
          example: DEV1W0XDH1368LWE1J40
        printRequestSummaries:
          type: array
          description: List of print request summaries for the certificate.
          items:
            $ref: '#/components/schemas/PrintRequestSummary'
      required:
        - vacNumber
        - printRequestSummaries
    PrintRequestSummary:
      title: PrintRequestSummary
      type: object
      description: An object containing print request summary
      properties:
        status:
          $ref: '#/components/schemas/PrintRequestStatus'
        userId:
          type: string
          format: email
          example: fred.blogs@some-domain.co.uk
          description: UserId of the user who made the print request
        dateTime:
          type: string
          format: date-time
          description: The timestamp in ISO-8601 UTC that the print request status update was received
          example: '2022-11-17T10:53:25Z'
        message:
          type: string
          description: Message received for the print request status update
      required:
        - status
        - userId
        - dateTime
    PrintRequestStatus:
      title: PrintRequestStatus
      type: string
      enum:
        - print-processing
        - print-failed
        - dispatched
        - not-delivered

  #
  # Response Body Definitions
  # --------------------------------------------------------------------------------
  responses:
    CertificateSummary:
      description: Response containing a single Certificate summary
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
        Access-Control-Allow-Methods:
          schema:
            type: string
        Access-Control-Allow-Headers:
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CertificateSummaryResponse'

  securitySchemes:
    eroUserCognitoUserPoolAuthorizer:
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: cognito_user_pools
      x-amazon-apigateway-authorizer:
        providerARNs:
          - '${cognito_ero_user_pool_arn}'
        type: cognito_user_pools